[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cloudya"
version = "1.0.0"
authors = [
    {name = "acorvez", email = "contact@cloudya.dev"},
]
description = "CLI DevOps intelligente pour l'automatisation d'infrastructures cloud"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Environment :: Console",
]
keywords = ["devops", "cloud", "infrastructure", "automation", "terraform", "ansible", "cli"]
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "rich>=12.0.0",
    "psutil>=5.9.0",
    "jinja2>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/acorvez/CLOUDYA_FRONTEND"
"Bug Reports" = "https://github.com/acorvez/CLOUDYA_FRONTEND/issues"
"Source" = "https://github.com/acorvez/CLOUDYA_FRONTEND"
"Documentation" = "https://github.com/acorvez/CLOUDYA_FRONTEND#readme"

# POINT D'ENTRÉE CRUCIAL - Crée l'exécutable /usr/local/bin/cloudya
[project.scripts]
cloudya = "cloudya.cli:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["cloudya*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
cloudya = [
    "templates/**/*",
    "config/*.yaml",
    "config/*.yml",
]

# Configuration des outils de développement
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Répertoires à exclure
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=cloudya --cov-report=html --cov-report=term-missing"
